{"version":3,"sources":["components/App.jsx","reportWebVitals.js","index.js"],"names":["getDigest","text","md5","toString","App","useState","numeroHash","setNumeroHash","numerosHashes","setNumerosHashes","numerosIntento","setNumerosIntento","cantidadPicas","setCantidadPicas","cantidadFijas","setCantidadFijas","intentado","setIntentado","mensaje","setMensaje","cantidadIntentos","setCantidadIntentos","gano","setGano","inputsRefs","useRef","init","numero","numeros","i","length","Math","floor","random","includes","join","generateNumber","numerosHashesTemp","split","forEach","e","getPicasYFijas","claveHashes","useEffect","src","alt","className","map","type","value","min","max","maxLength","onKeyUp","event","index","key","match","abs","current","focus","keyCode","target","onInput","onChange","ref","onClick","style","marginBottom","toUpperCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4818b6a2.chunk.js","sourcesContent":["import {useState, useEffect, useRef} from 'react'\nimport '../css/App.css'\nimport md5 from 'crypto-js/md5'\n\nfunction isNumberKey(value) {    \n  let regExp = \"^\\\\d+$\";\n  return value.match(regExp); \n}\n\nfunction generateNumber(){\n  let numeros = ['', '', '', '']\n  for (let i = 0; i < numeros.length; i++){\n    let numero = Math.floor(Math.random()*10).toString()\n    while (numeros.includes(numero)){\n      numero = Math.floor(Math.random()*10).toString()\n    }\n    numeros[i] = numero\n  }\n  return numeros.join('')\n}\n\nfunction getDigest(text){\n  return md5(text).toString()\n}\n\nfunction App() {\n  const [numeroHash, setNumeroHash] = useState('')\n  const [numerosHashes, setNumerosHashes] = useState(['', '', '', ''])\n  const [numerosIntento, setNumerosIntento] = useState(['', '', '', ''])\n  const [cantidadPicas, setCantidadPicas] = useState(0)\n  const [cantidadFijas, setCantidadFijas] = useState(0)\n  const [intentado, setIntentado] = useState(false)\n  const [mensaje, setMensaje] = useState('Intenta adivinar la combinación')\n  const [cantidadIntentos, setCantidadIntentos] = useState(0)\n  const [gano, setGano] = useState(false)\n\n  const inputsRefs = [\n    useRef(),\n    useRef(),\n    useRef(),\n    useRef()\n  ]\n\n  const init = () => {\n    let numero = generateNumber()\n    setNumeroHash(getDigest(numero))\n    let numerosHashesTemp = ['', '', '', '']\n    numero.split('').forEach((e,i) => {\n      numerosHashesTemp[i] = getDigest(e)\n    })\n    setNumerosHashes(numerosHashesTemp)\n  }\n  \n  useEffect(() => {\n    init()\n  }, [])\n\n  function onInput(event, index){\n    let numeros = [...numerosIntento]\n    if(isNumberKey(event.key)){\n      numeros[index] = event.key\n      if (index+1<=3)\n      inputsRefs[Math.abs(index+1)%4].current.focus()\n    } else if (event.keyCode === 8){\n      numeros[index] = ''\n      if (index-1 >= 0 && event.target.value === '')\n      inputsRefs[Math.abs(index-1)%4].current.focus()\n    } else if (event.keyCode === 37){\n      inputsRefs[Math.abs(index+3)%4].current.focus()\n    } else if (event.keyCode === 39){\n      inputsRefs[Math.abs(index+1)%4].current.focus()\n    } else if (event.keyCode === 13){\n      getPicasYFijas(numerosIntento, numerosHashes)\n    }\n    setNumerosIntento(numeros)\n  }\n\n  function getPicasYFijas(numeros, claveHashes){\n    if (!gano){\n      setIntentado(true)\n      let cantidadFijas = 0\n      let cantidadPicas = 0\n      numeros.forEach((e, i) => {\n        let numeroHash = getDigest(e)\n        if (claveHashes.includes(numeroHash)){\n          if (numeroHash === claveHashes[i]){\n            cantidadFijas += 1\n          } else {\n            cantidadPicas += 1\n          }\n        }\n      })\n      setCantidadPicas(cantidadPicas)\n      setCantidadFijas(cantidadFijas)\n      if (numerosIntento.join('').length !== 4){\n        setIntentado(false)\n        setMensaje('Debes ingresar todos los numeros')\n      } else {\n        setCantidadIntentos(cantidadIntentos+1)\n      }\n      if (cantidadFijas === 4){\n        setGano(true)\n      }\n    } else {\n      init()\n      setCantidadIntentos(0)\n      setCantidadPicas(0)\n      setCantidadFijas(0)\n      setIntentado(false)\n      setMensaje('Intenta adivinar la combianción')\n      setNumerosIntento(['', '', '', ''])\n      setGano(false)\n    }\n  }\n\n  return (\n    <>\n      <img src=\"https://images.unsplash.com/photo-1557264337-e8a93017fe92?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&dl=pawel-czerwinski-fPN1w7bIuNU-unsplash.jpg&w=1920\" alt=\"\" className=\"background-image\"/>\n      <div className=\"main\">\n        { intentado ?\n          (\n            cantidadFijas || cantidadPicas ?\n            (\n              gano ?\n              <h1>¡Has ganado!</h1>\n              :\n              <h1>Hay <b>{cantidadPicas}</b> pica{cantidadPicas === 1 ? '':'s'} y <b>{cantidadFijas}</b> fija{cantidadFijas === 1 ? '':'s'}</h1>\n            ) : (\n              <h1>No hay picas ni fijas</h1>\n            )\n          ) : (\n            <h1>{mensaje}</h1>\n          )\n        }\n        <div className=\"number-input\">\n          {[0,1,2,3].map((i) => {\n            return (\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={numerosIntento[i]}\n                key={i}\n                min=\"0\"\n                max=\"9\"\n                maxLength=\"1\"\n                onKeyUp={(e) => {\n                  onInput(e,i)\n                }}\n                onChange={()=>{}}\n                ref={inputsRefs[i]}\n              />\n            )\n          })}\n        </div>\n        <button className=\"btn btn-try\" onClick={() => {\n          getPicasYFijas(numerosIntento, numerosHashes)\n        }}\n        >{gano ? 'Reiniciar':'Intentar'}</button>\n        {\n          cantidadIntentos > 0 ?\n            (\n              <small style={{marginBottom: '1rem'}}>Has realizado {cantidadIntentos} intento{cantidadIntentos === 1 ? '':'s'}</small>  \n            )\n            :\n            (\n              null\n            )\n        }\n        <div className=\"bottom\"><small>MD5 de la combinación: </small><span className=\"hash\">{numeroHash.toUpperCase()}</span></div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}