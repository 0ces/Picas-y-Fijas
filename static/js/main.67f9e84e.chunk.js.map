{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["getDigest","text","md5","toString","App","useState","numeroHash","setNumeroHash","numerosHashes","setNumerosHashes","numerosIntento","setNumerosIntento","cantidadPicas","setCantidadPicas","cantidadFijas","setCantidadFijas","intentado","setIntentado","mensaje","setMensaje","inputsRefs","useRef","useEffect","numero","numeros","i","length","Math","floor","random","includes","join","generateNumber","numerosHashesTemp","split","forEach","e","src","alt","className","map","type","value","min","max","maxLength","onKeyUp","event","index","key","match","abs","current","focus","keyCode","target","onInput","onChange","ref","onClick","claveHashes","getPicasYFijas","toUpperCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67f9e84e.chunk.js","sourcesContent":["import {useState, useEffect, useRef} from 'react'\nimport './App.css'\nimport md5 from 'crypto-js/md5'\n\nfunction isNumberKey(value) {    \n  let regExp = \"^\\\\d+$\";\n  return value.match(regExp); \n}\n\nfunction generateNumber(){\n  let numeros = ['', '', '', '']\n  for (let i = 0; i < numeros.length; i++){\n    let numero = Math.floor(Math.random()*10).toString()\n    while (numeros.includes(numero)){\n      numero = Math.floor(Math.random()*10).toString()\n    }\n    numeros[i] = numero\n  }\n  return numeros.join('')\n}\n\nfunction getDigest(text){\n  return md5(text).toString()\n}\n\nfunction App() {\n  const [numeroHash, setNumeroHash] = useState('')\n  const [numerosHashes, setNumerosHashes] = useState(['', '', '', ''])\n  const [numerosIntento, setNumerosIntento] = useState(['', '', '', ''])\n  const [cantidadPicas, setCantidadPicas] = useState(0)\n  const [cantidadFijas, setCantidadFijas] = useState(0)\n  const [intentado, setIntentado] = useState(false)\n  const [mensaje, setMensaje] = useState('Intenta adivinar la combinación')\n\n  const inputsRefs = [\n    useRef(),\n    useRef(),\n    useRef(),\n    useRef()\n  ]\n  \n  useEffect(() => {\n    let numero = generateNumber()\n    setNumeroHash(getDigest(numero))\n    let numerosHashesTemp = ['', '', '', '']\n    numero.split('').forEach((e,i) => {\n      numerosHashesTemp[i] = getDigest(e)\n    })\n    setNumerosHashes(numerosHashesTemp)\n  }, [])\n\n  function onInput(event, index){\n    let numeros = [...numerosIntento]\n    if(isNumberKey(event.key)){\n      numeros[index] = event.key\n      if (index+1<=3)\n      inputsRefs[Math.abs(index+1)%4].current.focus()\n    } else if (event.keyCode === 8){\n      numeros[index] = ''\n      if (index-1 >= 0 && event.target.value === '')\n      inputsRefs[Math.abs(index-1)%4].current.focus()\n    } else if (event.keyCode === 37){\n      inputsRefs[Math.abs(index-1)%4].current.focus()\n    } else if (event.keyCode === 39){\n      inputsRefs[Math.abs(index+1)%4].current.focus()\n    }\n    setNumerosIntento(numeros)\n  }\n\n  function getPicasYFijas(numeros, claveHashes){\n    setIntentado(true)\n    let cantidadFijas = 0\n    let cantidadPicas = 0\n    numeros.forEach((e, i) => {\n      let numeroHash = getDigest(e)\n      if (claveHashes.includes(numeroHash)){\n        if (numeroHash === claveHashes[i]){\n          cantidadFijas += 1\n        } else {\n          cantidadPicas += 1\n        }\n      }\n    })\n    setCantidadPicas(cantidadPicas)\n    setCantidadFijas(cantidadFijas)\n    if (numerosIntento.join('').length !== 4){\n      setIntentado(false)\n      setMensaje('Debes ingresar todos los numeros')\n    }\n  }\n\n  return (\n    <>\n      <img src=\"https://images.unsplash.com/photo-1557264337-e8a93017fe92?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&dl=pawel-czerwinski-fPN1w7bIuNU-unsplash.jpg&w=1920\" alt=\"\" className=\"background-image\"/>\n      <div className=\"main\">\n        { intentado ?\n          (\n            cantidadFijas || cantidadPicas ?\n            (\n              cantidadFijas === 4 ?\n              <h1>¡Has ganado!</h1>\n              :\n              <h1>Hay <b>{cantidadPicas}</b> pica{cantidadPicas > 1 ? 's':''} y <b>{cantidadFijas}</b> fija{cantidadFijas > 1 ? 's':''}</h1>\n            ) : (\n              <h1>No hay picas ni fijas</h1>\n            )\n          ) : (\n            <h1>{mensaje}</h1>\n          )\n        }\n        <div className=\"number-input\">\n          {[0,1,2,3].map((i) => {\n            return (\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={numerosIntento[i]}\n                key={i}\n                min=\"0\"\n                max=\"9\"\n                maxLength=\"1\"\n                onKeyUp={(e) => {\n                  onInput(e,i)\n                }}\n                onChange={()=>{}}\n                ref={inputsRefs[i]}\n              />\n            )\n          })}\n        </div>\n        <button className=\"btn btn-try\" onClick={() => {\n          getPicasYFijas(numerosIntento, numerosHashes)\n        }}\n        >Intentar</button>\n        <div className=\"bottom\"><small>MD5 de la combinación: </small><span className=\"hash\">{numeroHash.toUpperCase()}</span></div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}