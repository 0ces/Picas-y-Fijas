{"version":3,"sources":["components/App.jsx","reportWebVitals.js","index.js"],"names":["getDigest","text","md5","toString","App","useState","numeroHash","setNumeroHash","numerosHashes","setNumerosHashes","numerosIntento","setNumerosIntento","cantidadPicas","setCantidadPicas","cantidadFijas","setCantidadFijas","intentado","setIntentado","mensaje","setMensaje","cantidadIntentos","setCantidadIntentos","gano","setGano","historial","setHistorial","console","log","inputsRefs","useRef","init","numero","numeros","i","length","Math","floor","random","includes","join","generateNumber","numerosHashesTemp","split","forEach","e","getPicasYFijas","claveHashes","picas","fijas","useEffect","src","alt","className","map","type","value","min","max","maxLength","onKeyUp","event","index","key","match","abs","current","focus","keyCode","target","onInput","onChange","ref","onClick","style","marginBottom","toUpperCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e22683a2.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport \"../css/App.css\";\nimport md5 from \"crypto-js/md5\";\n\nfunction isNumberKey(value) {\n  let regExp = \"^\\\\d+$\";\n  return value.match(regExp);\n}\n\nfunction generateNumber() {\n  let numeros = [\"\", \"\", \"\", \"\"];\n  for (let i = 0; i < numeros.length; i++) {\n    let numero = Math.floor(Math.random() * 10).toString();\n    while (numeros.includes(numero)) {\n      numero = Math.floor(Math.random() * 10).toString();\n    }\n    numeros[i] = numero;\n  }\n  return numeros.join(\"\");\n}\n\nfunction getDigest(text) {\n  return md5(text).toString();\n}\n\nfunction App() {\n  const [numeroHash, setNumeroHash] = useState(\"\");\n  const [numerosHashes, setNumerosHashes] = useState([\"\", \"\", \"\", \"\"]);\n  const [numerosIntento, setNumerosIntento] = useState([\"\", \"\", \"\", \"\"]);\n  const [cantidadPicas, setCantidadPicas] = useState(0);\n  const [cantidadFijas, setCantidadFijas] = useState(0);\n  const [intentado, setIntentado] = useState(false);\n  const [mensaje, setMensaje] = useState(\"Intenta adivinar la combinación\");\n  const [cantidadIntentos, setCantidadIntentos] = useState(0);\n  const [gano, setGano] = useState(false);\n  const [historial, setHistorial] = useState([]);\n\n  console.log(historial);\n\n  const inputsRefs = [useRef(), useRef(), useRef(), useRef()];\n\n  const init = () => {\n    let numero = generateNumber();\n    setNumeroHash(getDigest(numero));\n    let numerosHashesTemp = [\"\", \"\", \"\", \"\"];\n    numero.split(\"\").forEach((e, i) => {\n      numerosHashesTemp[i] = getDigest(e);\n    });\n    setNumerosHashes(numerosHashesTemp);\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  function onInput(event, index) {\n    let numeros = [...numerosIntento];\n    if (isNumberKey(event.key)) {\n      numeros[index] = event.key;\n      if (index + 1 <= 3) inputsRefs[Math.abs(index + 1) % 4].current.focus();\n    } else if (event.keyCode === 8) {\n      numeros[index] = \"\";\n      if (index - 1 >= 0 && event.target.value === \"\")\n        inputsRefs[Math.abs(index - 1) % 4].current.focus();\n    } else if (event.keyCode === 37) {\n      inputsRefs[Math.abs(index + 3) % 4].current.focus();\n    } else if (event.keyCode === 39) {\n      inputsRefs[Math.abs(index + 1) % 4].current.focus();\n    } else if (event.keyCode === 13) {\n      getPicasYFijas(numerosIntento, numerosHashes);\n    }\n    setNumerosIntento(numeros);\n  }\n\n  function getPicasYFijas(numeros, claveHashes) {\n    if (!gano) {\n      setIntentado(true);\n      let cantidadFijas = 0;\n      let cantidadPicas = 0;\n      numeros.forEach((e, i) => {\n        let numeroHash = getDigest(e);\n        if (claveHashes.includes(numeroHash)) {\n          if (numeroHash === claveHashes[i]) {\n            cantidadFijas += 1;\n          } else {\n            cantidadPicas += 1;\n          }\n        }\n      });\n      setCantidadPicas(cantidadPicas);\n      setCantidadFijas(cantidadFijas);\n      if (numerosIntento.join(\"\").length !== 4) {\n        setIntentado(false);\n        setMensaje(\"Debes ingresar todos los numeros\");\n      } else {\n        setHistorial((historial) => [\n          ...historial,\n          {\n            numero: numerosIntento.join(\"\"),\n            picas: cantidadPicas,\n            fijas: cantidadFijas,\n          },\n        ]);\n        setCantidadIntentos(cantidadIntentos + 1);\n      }\n      if (cantidadFijas === 4) {\n        setGano(true);\n      }\n    } else {\n      init();\n      setCantidadIntentos(0);\n      setCantidadPicas(0);\n      setCantidadFijas(0);\n      setIntentado(false);\n      setMensaje(\"Intenta adivinar la combianción\");\n      setNumerosIntento([\"\", \"\", \"\", \"\"]);\n      setGano(false);\n    }\n  }\n\n  return (\n    <>\n      <img\n        src=\"https://images.unsplash.com/photo-1557264337-e8a93017fe92?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&dl=pawel-czerwinski-fPN1w7bIuNU-unsplash.jpg&w=1920\"\n        alt=\"\"\n        className=\"background-image\"\n      />\n      <div className=\"main\">\n        {intentado ? (\n          cantidadFijas || cantidadPicas ? (\n            gano ? (\n              <h1>¡Has ganado!</h1>\n            ) : (\n              <h1>\n                Hay <b>{cantidadPicas}</b> pica{cantidadPicas === 1 ? \"\" : \"s\"}{\" \"}\n                y <b>{cantidadFijas}</b> fija{cantidadFijas === 1 ? \"\" : \"s\"}\n              </h1>\n            )\n          ) : (\n            <h1>No hay picas ni fijas</h1>\n          )\n        ) : (\n          <h1>{mensaje}</h1>\n        )}\n        <div className=\"number-input\">\n          {[0, 1, 2, 3].map((i) => {\n            return (\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={numerosIntento[i]}\n                key={i}\n                min=\"0\"\n                max=\"9\"\n                maxLength=\"1\"\n                onKeyUp={(e) => {\n                  onInput(e, i);\n                }}\n                onChange={() => {}}\n                ref={inputsRefs[i]}\n              />\n            );\n          })}\n        </div>\n        <button\n          className=\"btn btn-try\"\n          onClick={() => {\n            getPicasYFijas(numerosIntento, numerosHashes);\n          }}\n        >\n          {gano ? \"Reiniciar\" : \"Intentar\"}\n        </button>\n        {cantidadIntentos > 0 ? (\n          <>\n            <small style={{ marginBottom: \"1rem\" }}>\n              Has realizado {cantidadIntentos} intento\n              {cantidadIntentos === 1 ? \"\" : \"s\"}\n            </small>\n            <table>\n              <thead>\n                <tr>\n                  <td>#</td>\n                  <td>picas</td>\n                  <td>fijas</td>\n                </tr>\n              </thead>\n              <tbody>\n                {historial.map(({ numero, picas, fijas }) => (\n                  <tr>\n                    <td>{numero}</td>\n                    <td>{picas}</td>\n                    <td>{fijas}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        ) : null}\n        <div className=\"bottom\">\n          <small>MD5 de la combinación: </small>\n          <span className=\"hash\">{numeroHash.toUpperCase()}</span>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}